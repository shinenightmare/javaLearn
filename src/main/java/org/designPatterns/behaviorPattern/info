包含:这类模式专注于对象之间的通信
1、访问者模式(visitor)
    允许一个或多个操作应用到一组对象上，解耦操作和对象本身
2、观察者模式(observer)
    当一个对象状态发生改变时，所有依赖于它的对象都得到通知并自动更新
3、备忘录模式(memento)
    在不破坏封装的前提下，捕获并保存一个对象的内部状态
4、状态模式(state)
    允许一个对象在其内部状态改变时改变它的行为
5、模板方法模式(template method)
    在一个方法中定义一个算法的骨架，而将一些步骤延迟到子类中
6、责任链模式(chain of responsibility)
    为请求创建了一个接收者对象的链
7、命令模式(command)
    将请求封装成对象，从而让你使用不同的请求、队列或日志请求，并支持可撤销的操作
8、中介者模式(mediator)
    通过引入一个第三方对象（中介者）来控制两个对象（同事）之间的交互
9、解释器模式(interpreter)
    实现一个表达式接口，该接口解释一个特定的上下文
10、迭代器模式(iterator)
    提供一种方法顺序访问一个集合对象中的各个元素，而又不暴露其内部的表示
11、策略模式(strategy)
    定义一系列的算法，把它们一个个封装起来，并使它们可相互替换
